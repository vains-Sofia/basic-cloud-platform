package com.basic.cloud.system.api;

import com.basic.cloud.system.api.domain.request.FindBasicUserPageRequest;
import com.basic.cloud.system.api.domain.response.BasicUserResponse;
import com.basic.cloud.system.api.domain.response.FindBasicUserResponse;
import com.basic.framework.core.domain.PageResult;
import com.basic.framework.core.domain.Result;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import java.util.Set;

/**
 * 基础用户信息feignClient测试类
 *
 * @author vains
 */
@SpringBootTest
class SysBasicUserClientTest {

    @Autowired
    private SysBasicUserClient basicUserClient;

    @Test
    public void getByEmail() {
        Result<BasicUserResponse> responseResult = basicUserClient.getByEmail("17683906991@163.com");
        System.out.println(responseResult);
    }

    @Test
    public void findByPage() {
        FindBasicUserPageRequest request = new FindBasicUserPageRequest();
        request.setSize(10L);
        request.setCurrent(1L);
        Result<PageResult<FindBasicUserResponse>> basicUserByPage = basicUserClient.findByPage(request);
        System.out.println(basicUserByPage);
    }

    @Test
    public void userDetails() {
        Result<FindBasicUserResponse> userResponseResult = basicUserClient.userDetails(1L);
        System.out.println(userResponseResult);
    }

    @Test
    public void noneId() {
        Set<String> ids = Set.of(
                "1351686892620812",
                "1351686901009408",
                "1351686901009410",
                "1351686901009411",
                "1351686901009412",
                "1351686901009414",
                "1351686750014480",
                "1351686750014482",
                "1351681456803861",
                "1351681456803863",
                "1351681456803865",
                "1351681456803867",
                "1351681465192448",
                "1351681465192450",
                "1351681465192452",
                "1351681465192454",
                "1351681465192456",
                "1351681465192458",
                "1351681465192460",
                "1351681465192462",
                "1351681465192464",
                "1351681465192466",
                "1351681465192468",
                "1351681465192470",
                "1351681465192472",
                "1351681465192474",
                "1351681465192476",
                "1351681465192478",
                "1351681465192480",
                "1351681465192482",
                "1351681465192484",
                "1351681465192486",
                "1351681423249421",
                "1351681423249422",
                "1351681423249424",
                "1351681423249425",
                "1351681423249426",
                "1351681423249428",
                "1351681423249429",
                "1351681423249430",
                "1351681423249432",
                "1351681423249433",
                "1351681423249434",
                "1351681423249436",
                "1351681423249437",
                "1351681423249438",
                "1351681423249440",
                "1351681423249441",
                "1351681423249442",
                "1351681423249444",
                "1351681423249445",
                "1351681423249446",
                "1351681423249448",
                "1351681423249449",
                "1351681423249450",
                "1351681423249452",
                "1351681423249453",
                "1351681423249454",
                "1351681423249456",
                "1351681423249457",
                "1351681423249458",
                "1351681423249460",
                "1351681423249461",
                "1351681423249462",
                "1351681431638017",
                "1351681431638018",
                "1351681431638019",
                "1351681431638021",
                "1351680970264578",
                "1351680970264580",
                "1351680911543320",
                "1351680911543329",
                "1351680911543331",
                "1351680919931907",
                "1351680894766083",
                "1351680894766084",
                "1351680894766087",
                "1351680894766088",
                "1351680894766093",
                "1351680894766094",
                "1351680903154692",
                "1351680777326639"
        );
        Set<String> ids1 = new java.util.HashSet<>(Set.of(
                "1351686892620812",
                "1351686901009408",
                "1351686901009409",
                "1351686901009410",
                "1351686901009411",
                "1351686901009412",
                "1351686901009413",
                "1351686901009414",
                "1351686750014514",
                "1351686750014480",
                "1351686750014482",
                "1351686750014483",
                "1351686531910656",
                "1351681725238276",
                "1351681456803861",
                "1351681456803862",
                "1351681456803863",
                "1351681456803864",
                "1351681456803865",
                "1351681456803866",
                "1351681456803867",
                "1351681456803868",
                "1351681465192448",
                "1351681465192449",
                "1351681465192450",
                "1351681465192451",
                "1351681465192452",
                "1351681465192453",
                "1351681465192454",
                "1351681465192455",
                "1351681465192456",
                "1351681465192457",
                "1351681465192458",
                "1351681465192459",
                "1351681465192460",
                "1351681465192461",
                "1351681465192462",
                "1351681465192463",
                "1351681465192464",
                "1351681465192465",
                "1351681465192466",
                "1351681465192467",
                "1351681465192468",
                "1351681465192469",
                "1351681465192470",
                "1351681465192471",
                "1351681465192472",
                "1351681465192473",
                "1351681465192474",
                "1351681465192475",
                "1351681465192476",
                "1351681465192477",
                "1351681465192478",
                "1351681465192479",
                "1351681465192480",
                "1351681465192481",
                "1351681465192482",
                "1351681465192483",
                "1351681465192484",
                "1351681465192485",
                "1351681465192486",
                "1351681465192487",
                "1351681423249421",
                "1351681423249422",
                "1351681423249423",
                "1351681423249424",
                "1351681423249425",
                "1351681423249426",
                "1351681423249427",
                "1351681423249428",
                "1351681423249429",
                "1351681423249430",
                "1351681423249431",
                "1351681423249432",
                "1351681423249433",
                "1351681423249434",
                "1351681423249435",
                "1351681423249436",
                "1351681423249437",
                "1351681423249438",
                "1351681423249439",
                "1351681423249440",
                "1351681423249441",
                "1351681423249442",
                "1351681423249443",
                "1351681423249444",
                "1351681423249445",
                "1351681423249446",
                "1351681423249447",
                "1351681423249448",
                "1351681423249449",
                "1351681423249450",
                "1351681423249451",
                "1351681423249452",
                "1351681423249453",
                "1351681423249454",
                "1351681423249455",
                "1351681423249456",
                "1351681423249457",
                "1351681423249458",
                "1351681423249459",
                "1351681423249460",
                "1351681423249461",
                "1351681423249462",
                "1351681431638016",
                "1351681431638017",
                "1351681431638018",
                "1351681431638019",
                "1351681431638020",
                "1351681431638021",
                "1351681339362321",
                "1351680970264581",
                "1351680970264578",
                "1351680970264579",
                "1351680970264580",
                "1351680911543320",
                "1351680911543329",
                "1351680911543331",
                "1351680919931907",
                "1351680894766083",
                "1351680894766084",
                "1351680894766087",
                "1351680894766088",
                "1351680894766093",
                "1351680894766094",
                "1351680903154692",
                "1351680785714184",
                "1351680785714185",
                "1351680777326639",
                "1351680743772167",
                "1351680743772168",
                "1351677589657145",
                "1351677589657146",
                "1351677589657162",
                "1351677547711912",
                "1351668655786008",
                "1351668630619167",
                "1351668622229526",
                "1351664251762696",
                "1335455137459231",
                "1335449785527320"
        ));
        ids1.removeIf(ids::contains);
        ids1.forEach(System.out::println);
    }
}